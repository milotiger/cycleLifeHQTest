#!/usr/bin/env node

var shell = require('shelljs');
var publishUtils = require('../src/utils');
var path = require('path');
var packageJson = require(path.resolve('./package.json'));

// get GIT url
var GIT_URL = publishUtils.exec('git config --get remote.origin.url');
if (!GIT_URL) {
  console.log('This project is not configured with a remote git repo');
  process.exit(-1);
}

var BRANCH_NAME = publishUtils.exec('git rev-parse --abbrev-ref HEAD');

var outDirBase = shell.tempdir();
var pagesDir = outDirBase + '/.out';
var branchDir = outDirBase + '/.branchout';

var originDir = shell.pwd();

// clear and re-create the out directory
shell.rm('-rf', pagesDir);
shell.mkdir('-p', pagesDir);

// clear and re-create the branch-out directory
shell.rm('-rf', branchDir);
shell.mkdir('-p', branchDir);

// run our compile script
console.log('=> Building storybook');
// TODO: use build script, don't hardcode 'static'
if (false && packageJson.scripts['build-storybook']) {
  publishUtils.exec('npm run build-storybook');
} else {
  publishUtils.exec('node ./node_modules/.bin/build-storybook -s static -o ' + branchDir);
}

// go to the out directory
shell.cd(pagesDir);

console.log('=> Cloning gh-pages from ' + GIT_URL);
publishUtils.exec('git clone -b gh-pages --single-branch ' + GIT_URL + ' .');

// clear and re-create branch directory
shell.rm('-rf', BRANCH_NAME);
shell.mkdir(BRANCH_NAME);

shell.cd(BRANCH_NAME);
shell.cp('-R', branchDir+'/*', '.');

// Rewrite asset paths to branch directories
// TODO: less hacky solution
shell.sed('-i', '/static/', 'static/', 'static/preview.bundle.js');

if (!publishUtils.exec('git status --porcelain')) {
  console.log('No changes, exiting without deploy');
  process.exit();
}

// Commit all the changes with the commit message "Deploy to GitHub Pages".
console.log('=> Committing');
publishUtils.exec('git add .'); // TODO: handle error states
publishUtils.exec('git commit -m "Deploy '+ BRANCH_NAME + ' to GitHub Pages"');

console.log('=> Deploying storybook');
publishUtils.exec('git push ' + GIT_URL)
console.log();
console.log('=> Storybook deployed to: ' + publishUtils.getGHPagesUrl(GIT_URL) + '/' + BRANCH_NAME + '/');

console.log('Cleaning up...');
shell.cd(pagesDir+'/..');
shell.rm('-rf', pagesDir);
shell.rm('-rf', branchDir);

